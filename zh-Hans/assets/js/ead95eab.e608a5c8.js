(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[185],{571:function(e,n,t){"use strict";t.d(n,{r:function(){return k},Z:function(){return h}});var a=t(7294),i=t(6010),r=t(1773);function l(e){var n=e.getBoundingClientRect();return n.top===n.bottom?l(e.parentNode):n}function o(e){var n,t=e.anchorTopOffset,a=Array.from(document.querySelectorAll(".anchor.anchor__h2, .anchor.anchor__h3")),i=a.find((function(e){return l(e).top>=t}));return i?function(e){return e.top>0&&e.bottom<window.innerHeight/2}(l(i))?i:null!=(n=a[a.indexOf(i)-1])?n:null:a[a.length-1]}function p(){var e=(0,a.useRef)(0),n=(0,r.LU)().navbar.hideOnScroll;return(0,a.useEffect)((function(){e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}var s=function(e){var n=(0,a.useRef)(void 0),t=p();(0,a.useEffect)((function(){var a=e.linkClassName,i=e.linkActiveClassName;function r(){var e=function(e){return Array.from(document.getElementsByClassName(e))}(a),r=o({anchorTopOffset:t.current}),l=e.find((function(e){return r&&r.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)}));e.forEach((function(e){!function(e,t){if(t){var a;n.current&&n.current!==e&&(null==(a=n.current)||a.classList.remove(i)),e.classList.add(i),n.current=e}else e.classList.remove(i)}(e,e===l)}))}return document.addEventListener("scroll",r),document.addEventListener("resize",r),r(),function(){document.removeEventListener("scroll",r),document.removeEventListener("resize",r)}}),[e,t])},c="tableOfContents_35-E",m="table-of-contents__link",d={linkClassName:m,linkActiveClassName:"table-of-contents__link--active"};function k(e){var n=e.toc,t=e.isChild;return n.length?a.createElement("ul",{className:t?"":"table-of-contents table-of-contents__left-border"},n.map((function(e){return a.createElement("li",{key:e.id},a.createElement("a",{href:"#"+e.id,className:m,dangerouslySetInnerHTML:{__html:e.value}}),a.createElement(k,{isChild:!0,toc:e.children}))}))):null}var h=function(e){var n=e.toc;return s(d),a.createElement("div",{className:(0,i.Z)(c,"thin-scrollbar")},a.createElement(k,{toc:n}))}},2317:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var a=t(7294),i=t(6010),r=t(4973),l=t(1773),o="tocCollapsible_1PrD",p="tocCollapsibleButton_2O1e",s="tocCollapsibleContent_2Ydz",c="tocCollapsibleExpanded_3GYr",m=t(571);function d(e){var n,t=e.toc,d=e.className,k=(0,l.uR)({initialState:!0}),h=k.collapsed,u=k.toggleCollapsed;return a.createElement("div",{className:(0,i.Z)(o,(n={},n[c]=!h,n),d)},a.createElement("button",{type:"button",className:(0,i.Z)("clean-btn",p),onClick:u},a.createElement(r.Z,{id:"theme.TOCCollapsible.toggleButtonLabel",description:"The label used by the button on the collapsible TOC component"},"On this page")),a.createElement(l.zF,{lazy:!0,className:s,collapsed:h},a.createElement(m.r,{toc:t})))}},558:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},assets:function(){return c},toc:function(){return m},default:function(){return k}});var a=t(2122),i=t(9756),r=(t(7294),t(3905)),l=t(2317),o={slug:"malloc_chunk",title:"\u5185\u5b58\u6cc4\u6f0f \u4e0e malloc chunk",author:"Ye Shu",author_title:"Studying how C++ allocates and frees chunks in memory",author_url:"https://github.com/yechs",author_image_url:"https://avatars.githubusercontent.com/u/49149993",image:"https://shuye.dev/img/yechs.jpeg",tags:["c++","pwn"]},p="\u5185\u5b58\u6cc4\u6f0f \u4e0e malloc chunk",s={permalink:"/zh-Hans/blog/malloc_chunk",editUrl:"https://github.com/yechs/website/edit/master/blog/blog/2021-08-13-malloc_chunks.mdx",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-blog/2021-08-13-malloc_chunks.mdx",title:"\u5185\u5b58\u6cc4\u6f0f \u4e0e malloc chunk",description:"\u6211\u4e3a\u4ec0\u4e48\u5199\u8fd9\u7bc7\u6587\u7ae0",date:"2021-08-13T00:00:00.000Z",formattedDate:"2021\u5e748\u670813\u65e5",tags:[{label:"c++",permalink:"/zh-Hans/blog/tags/c"},{label:"pwn",permalink:"/zh-Hans/blog/tags/pwn"}],readingTime:9.99,truncated:!0,authors:[{name:"Ye Shu",title:"Studying how C++ allocates and frees chunks in memory",url:"https://github.com/yechs",imageURL:"https://avatars.githubusercontent.com/u/49149993"}],nextItem:{title:"Me and My Broken Site(s)",permalink:"/zh-Hans/blog/welcome"}},c={authorsImageUrls:[void 0]},m=[{value:"\u6211\u4e3a\u4ec0\u4e48\u5199\u8fd9\u7bc7\u6587\u7ae0",id:"how-it-all-started",children:[]},{value:"\u4ec0\u4e48\u662f\u5185\u5b58\u6cc4\u6f0f",id:"what-are-memory-leaks",children:[{value:"PoC",id:"poc",children:[]},{value:"\u521d\u63a2\u5185\u5b58",id:"a-deeper-look-into-the-memory",children:[]},{value:"\u5229\u7528 Valgrind \u8fdb\u884c\u9a8c\u8bc1",id:"verification-with-valgrind",children:[]}]},{value:"\u5bf9\u8c61\u662f\u5982\u4f55\u5728\u5806 (heap) \u4e0a\u88ab\u5206\u914d\u7684",id:"how-are-objects-allocated-on-the-heap",children:[{value:"<code>new</code> \u4e0e <code>delete</code> \u662f\u5982\u4f55\u5de5\u4f5c\u7684",id:"how-new-and-delete-works",children:[]},{value:"<code>malloc_chunk</code> \u7684\u7ed3\u6784\u662f\u4ec0\u4e48\u6837\u7684?",id:"how-are-malloc_chunks-structured",children:[]},{value:"\u5229\u7528 PoC \u4ee3\u7801\u7684\u9a8c\u8bc1",id:"a-verification-using-poc",children:[]},{value:"<code>free</code> \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f",id:"how-does-free-work",children:[]}]},{value:"\u6211\u4eec\u5982\u4f55\u9884\u9632\u5185\u5b58\u6cc4\u6f0f\uff1f",id:"how-can-we-prevent-memory-leaks",children:[]},{value:"\u5f15\u7528 &amp; \u6269\u5c55\u9605\u8bfb",id:"references--further-readings",children:[]}],d={toc:m};function k(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"how-it-all-started"},"\u6211\u4e3a\u4ec0\u4e48\u5199\u8fd9\u7bc7\u6587\u7ae0"),(0,r.kt)("p",null,"\u5728\u6211\u6691\u671f\u5b9e\u4e60\u671f\u95f4 debug \u4e00\u4e2a\u5185\u5b58\u6cc4\u6f0f\u7684\u95ee\u9898\u65f6\uff0c\u6211\u53d1\u73b0\u6211\u4f7f\u7528\u7684\u5176\u4e2d\u4e00\u4e2a API return \u4e86\u4e00\u4e2a\u88f8\u6307\u9488\uff0c\u4ece\u800c\u628a\u8fd9\u4e2a\u76ee\u6807\u7684 ownership \u8f6c\u79fb\u7ed9\u4e86\u8c03\u7528\u8005\uff08\u6211\uff09\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u73b0\u5728\u9700\u8981\u8d1f\u8d23\u5728\u4ee3\u7801\u8fd0\u884c\u5b8c\u6bd5\u4e4b\u540e\u624b\u52a8 ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u6389\u8fd9\u4e2a\u6307\u9488\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i11-never-transfer-ownership-by-a-raw-pointer-t-or-reference-t"},"\u975e\u5e38\u7cdf\u7cd5\u7684\u5de5\u7a0b\u5b9e\u8df5"),"\uff0c\u6211\u5f00\u59cb\u5bf9\u5185\u5b58\u6cc4\u6f0f\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u662f\u5982\u4f55\u5220\u9664\u5185\u5b58\u7684\u4ea7\u751f\u4e86\u5174\u8da3\u3002"),(0,r.kt)("p",null,"\u5728\u505a\u4e86\u4e00\u4e9b\u7814\u7a76\u4e0e\u5b9e\u9a8c\u540e\uff0c\u6211\u5199\u4e0b\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\u672c\u6587\u5c06\u8bd5\u56fe\u56de\u7b54\u4e09\u7ec4\u95ee\u9898\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4ec0\u4e48\u662f\u5185\u5b58\u6cc4\u6f0f\uff1f"),(0,r.kt)("li",{parentName:"ol"},"\u5bf9\u8c61\u662f\u5982\u4f55\u5728 \u5806 (heap) \u4e0a\u88ab\u5206\u914d\u7684\uff1f",(0,r.kt)("inlineCode",{parentName:"li"},"delete[]")," \u5982\u4f55\u77e5\u9053\u5b83\u9700\u8981\u91ca\u653e\u54ea\u5757\u5185\u5b58\uff1f"),(0,r.kt)("li",{parentName:"ol"},"\u6211\u4eec\u5982\u4f55\u9884\u9632\u5185\u5b58\u6cc4\u6f0f\uff1f")),(0,r.kt)("p",null,"Stack Overflow \u4e0a\u7684\u95ee\u9898 ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/197675/how-does-delete-know-the-size-of-the-operand-array"},"\"How does delete[] 'know' the size of the operand array?\"")," \u5176\u5b9e\u5df2\u7ecf\u5927\u81f4\u56de\u7b54\u4e86\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4f46\u6211\u8fd8\u662f\u51b3\u5b9a\u66f4\u6df1\u5165\u5730\u63a2\u8ba8\u4e00\u4e0b\u5b9e\u9645\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u4ec0\u4e48\u6837\u7684\u3002"),(0,r.kt)("p",null,"\u5de7\u5408\u7684\u662f\uff0c\u6211\u548c\u670b\u53cb ",(0,r.kt)("a",{parentName:"p",href:"https://guozhen.dev"},"@gzhding")," \u521a\u597d\u5728\u6700\u8fd1\u7684\u4e00\u6b21 CTF \u6bd4\u8d5b\u4e2d\u5408\u4f5c\u4e86\u4e00\u9053 \u5806\u5229\u7528 (heap exploitation) \u7684\u9898\u76ee\u3002\u56e0\u4e3a\u8fd9\u4efd\u7ecf\u5386\uff0c\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"gdb")," \u8c03\u8bd5\u5e76\u67e5\u770b\u5806\u4e0a\u7684\u5185\u5b58\uff0c\u4ee5\u501f\u5176\u7ba1\u4e2d\u7aa5\u8c79\u3002"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u6ce8\uff1a\u6211\u5148\u5199\u6210\u4e86\u672c\u6587\u7684\u82f1\u6587\u7248\uff0c\u4e4b\u540e\u624d\u8bd5\u56fe\u5c06\u5176\u8bd1\u56de\u4e2d\u6587\u3002\u56e0\u6b64\u5982\u6709\u53ef\u80fd\u7684\u8bdd\uff0c\u8bf7",(0,r.kt)("a",{parentName:"p",href:"https://shuye.dev/blog/malloc_chunk/"},"\u4ee5\u82f1\u6587\u9605\u8bfb\u672c\u6587"),"\uff0c\u4ee5\u907f\u514d\u4e00\u4e9b\u56e0\u4e3a\u7ffb\u8bd1\u8d28\u91cf\u5bfc\u81f4\u7684\u8bed\u53e5\u4e0d\u987a\u4e0e\u7406\u89e3\u56f0\u96be\u3002"))),(0,r.kt)(l.Z,{toc:m,mdxType:"TOCCollapsible"}),(0,r.kt)("h2",{id:"what-are-memory-leaks"},"\u4ec0\u4e48\u662f\u5185\u5b58\u6cc4\u6f0f"),(0,r.kt)("p",null,"\u6211\u4eec\u77e5\u9053 ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/doc/tutorial/dynamic/"},"C++ \u80fd\u591f\u5728\u5806\u4e0a\u52a8\u6001\u5730\u5206\u914d\u5185\u5b58"),"\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"new[]")," \u521b\u5efa\u6570\u7ec4\uff0c\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u5220\u9664\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u5f53\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u7ec4\uff08\u5373\u5206\u914d\u4e86\u4e00\u6bb5\u5185\u5b58\u7528\u4ee5\u5b58\u50a8\u8fd9\u4e2a\u5bf9\u8c61\uff09\u800c\u53c8\u5fd8\u8bb0\u5220\u9664\u5b83\u65f6\uff0c",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Memory_leak"},"\u5185\u5b58\u6cc4\u6f0f")," \u5c31\u4f1a\u53d1\u751f\u3002\u5f53\u6307\u5411\u8fd9\u6bb5\u5185\u5b58\u7684\u6307\u9488\u8d85\u51fa\u4f5c\u7528\u57df (scope) \u65f6\uff0c\u6b63\u5728\u8fd0\u884c\u7684\u4ee3\u7801\u5c31\u4e22\u5931\u4e86\u5bf9\u88ab\u5206\u914d\u7684\u5185\u5b58\u7684\u77e5\u8bc6\u3002\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5185\u5b58\u6cc4\u6f0f\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u53d1\u751f\uff0c\u65b0\u5206\u914d\u7684\u5185\u5b58\u80fd\u591f\u6301\u7eed\u5730\u5806\u79ef\u800c\u4e0d\u88ab\u91ca\u653e\uff0c\u6700\u7ec8\u4f7f\u5f97\u7535\u8111\u53d8\u6162\u751a\u81f3\u5d29\u6e83\u3002"),(0,r.kt)("h3",{id:"poc"},"PoC"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u6709\u4e00\u6bb5\u7b80\u5355\u7684 Proof of Concept (PoC) \u4ee3\u7801\u3002\u5176\u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"main()")," \u51fd\u6570\u8c03\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"memory_leak()")," \u51fd\u6570\uff0c\u540e\u8005\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u7531 26 \u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"char")," \u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u586b\u5165\u5b83\u4eec\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="memory_leak.cpp"',title:'"memory_leak.cpp"'},"void memory_leak() {\n    // Always delete pointers created by new to avoid memory leaks!\n    char *arr = new char[26];\n\n    for (int i = 0; i < 26; i++) {\n        arr[i] = char(65 + i); // 65 is the ascii of 'A'\n    }\n\n    // The memory area is not freed!\n    // delete[] arr;\n}\n\nint main() {\n    memory_leak();\n    return 0;\n}\n")),(0,r.kt)("p",null,"\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u8bed\u53e5\u5df2\u7ecf\u88ab\u6ce8\u91ca\u6389\uff0c\u5f53\u51fd\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"memory_leak()")," return \u65f6\uff0c\u6307\u9488 ",(0,r.kt)("inlineCode",{parentName:"p"},"arr")," \u4f1a\u8d85\u51fa\u4f5c\u7528\u57df (scope) \u5e76\u5bfc\u81f4\u8fd9\u4e00\u5185\u5b58\u533a\u57df\u88ab\u6cc4\u6f0f\u3002"),(0,r.kt)("h3",{id:"a-deeper-look-into-the-memory"},"\u521d\u63a2\u5185\u5b58"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u6211\u4f7f\u7528\u4e86 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hugsy/gef"},"GEF")," (GDB Enhanced Features) \u800c\u4e0d\u662f\u539f\u751f GDB \u4ee5\u83b7\u53d6\u7ecf\u8fc7\u7f8e\u5316\u7684\u8f93\u51fa\u4ee5\u53ca\u8bf8\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"heap")," \u4e00\u7c7b\u7684\u989d\u5916\u529f\u80fd\u3002"))),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"g++ -g3 memory_leak.cpp -o memory_leak")," \u6765\u7f16\u8bd1\u8fd9\u4e2a\u7a0b\u5e8f\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"-g3")," flag \u4f1a\u5728\u7f16\u8bd1\u65f6\u4fdd\u5b58\u7a0b\u5e8f\u7684\u8c03\u8bd5\u4fe1\u606f\uff09\u5e76\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"gdb")," \u6765\u9a8c\u8bc1\u8fd9\u4e00\u5185\u5b58\u6cc4\u6f0f\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u5c06\u4f1a\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"memory_leak()")," \u51fd\u6570\u7684\u6700\u540e\u6253\u4e00\u4e2a\u65ad\u70b9\uff0c\u5e76\u8fd0\u884c\u7a0b\u5e8f\u76f4\u5230\u5176\u89e6\u53d1\u65ad\u70b9\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'$ gdb memory_leak\n\ngef\u27a4  b 11\nBreakpoint 1 at 0x1179: file memory_leak.cpp, line 11.\n\ngef\u27a4  r\n[...]\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 source:memory_leak.cpp+11 \u2500\u2500\u2500\u2500\n      6          arr[i] = char(65 + i); // 65 is the ascii of \'A\'\n      7      }\n      8\n      9      // The memory area is not freed!\n     10      // delete[] arr;\n\u25cf\u2192   11  }\n     12\n     13  int main() {\n     14      memory_leak();\n     15      return 0;\n     16  }\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 threads \u2500\u2500\u2500\u2500\n[#0] Id 1, Name: "memory_leak", stopped 0x555555555179 in memory_leak (), reason: BREAKPOINT\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 trace \u2500\u2500\u2500\u2500\n[#0] 0x555555555179 \u2192 memory_leak()\n[#1] 0x555555555186 \u2192 main()\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\ngef\u27a4  info locals\narr = 0x55555556aeb0 "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n\ngef\u27a4  x/8xw 0x55555556aeb0\n0x55555556aeb0: 0x44434241      0x48474645      0x4c4b4a49      0x504f4e4d\n0x55555556aec0: 0x54535251      0x58575655      0x00005a59      0x00000000\n')),(0,r.kt)("p",null,"\u5728\u7a0b\u5e8f\u89e6\u53d1\u65ad\u70b9\u540e\uff0c\u6211\u4eec\u6253\u5370\u51fa\u6307\u9488 ",(0,r.kt)("inlineCode",{parentName:"p"},"arr")," \u6307\u5411\u7684\u5730\u5740\u53ca\u8fd9\u5757\u5185\u5b58\u7684\u5185\u5bb9\u3002\u6ce8\u610f\u5185\u5b58\u662f\u4ee5 ",(0,r.kt)("a",{parentName:"p",href:"https://zh.wikipedia.org/zh-cn/%E5%AD%97%E8%8A%82%E5%BA%8F#%E5%B0%8F%E7%AB%AF%E5%BA%8F"},"\u5c0f\u7aef\u5e8f")," \u5b58\u50a8\u7684\uff0c\u56e0\u6b64 ",(0,r.kt)("inlineCode",{parentName:"p"},"0x44")," (D) \u6392\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"0x43")," (C)\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"0x42")," (B)\uff0c\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"0x41")," (A) \u4e4b\u524d\u3002"),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u76f4\u5230\u51fd\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"memory_leak()")," \u8fd0\u884c\u5b8c\u6bd5\u8fd4\u56de\u81f3 ",(0,r.kt)("inlineCode",{parentName:"p"},"main()"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdb"},'gef\u27a4  finish\n[...]\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 source:memory_leak.cpp+15 \u2500\u2500\u2500\u2500\n     10      // delete[] arr;\n\u25cf    11  }\n     12\n     13  int main() {\n     14      memory_leak();\n \u2192   15      return 0;\n     16  }\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 threads \u2500\u2500\u2500\u2500\n[#0] Id 1, Name: "memory_leak", stopped 0x555555555186 in main (), reason: TEMPORARY BREAKPOINT\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 trace \u2500\u2500\u2500\u2500\n[#0] 0x555555555186 \u2192 main()\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\ngef\u27a4  info locals\nNo locals.\n\ngef\u27a4  x/8xw 0x55555556aeb0\n0x55555556aeb0: 0x44434241      0x48474645      0x4c4b4a49      0x504f4e4d\n0x55555556aec0: 0x54535251      0x58575655      0x00005a59      0x00000000\n')),(0,r.kt)("p",null,"\u65e2\u7136 ",(0,r.kt)("inlineCode",{parentName:"p"},"memory_leak()")," return \u4e86\uff0c\u6211\u4eec\u5c31\u4e22\u5931\u4e86\u6307\u5411\u5185\u5b58\u5730\u5740 ",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aeb0")," \u7684\u6307\u9488 ",(0,r.kt)("inlineCode",{parentName:"p"},"arr"),"\u3002\u4f46\u5f53\u6211\u4eec\u6253\u5370\u51fa\u5185\u5b58\u533a\u57df\u65f6\uff0c\u53d1\u73b0\u8fd9\u4e9b\u6570\u636e\u4ecd\u7136\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u6ca1\u6709\uff08\u4e5f\u4e0d\u4f1a\uff09\u88ab\u91ca\u653e\u3002\u8fd9\u5c31\u662f\u5185\u5b58\u6cc4\u6f0f\u3002"),(0,r.kt)("h3",{id:"verification-with-valgrind"},"\u5229\u7528 Valgrind \u8fdb\u884c\u9a8c\u8bc1"),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u5982 ",(0,r.kt)("a",{parentName:"p",href:"https://valgrind.org"},"Valgrind")," \u4e00\u6837\u7684\u81ea\u52a8\u5316\u5de5\u5177\u6765\u68c0\u67e5\u5185\u5b58\u6cc4\u6f0f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ valgrind --leak-check=full ./memory_leak\n==382643== Memcheck, a memory error detector\n==382643== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==382643== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info\n==382643== Command: ./memory_leak\n==382643==\n==382643==\n==382643== HEAP SUMMARY:\n==382643==     in use at exit: 26 bytes in 1 blocks\n==382643==   total heap usage: 2 allocs, 1 frees, 72,730 bytes allocated\n==382643==\n==382643== 26 bytes in 1 blocks are definitely lost in loss record 1 of 1\n==382643==    at 0x484021F: operator new[](unsigned long) (vg_replace_malloc.c:579)\n==382643==    by 0x10914A: memory_leak() (memory_leak.cpp:3)\n==382643==    by 0x109185: main (memory_leak.cpp:14)\n==382643==\n==382643== LEAK SUMMARY:\n==382643==    definitely lost: 26 bytes in 1 blocks\n==382643==    indirectly lost: 0 bytes in 0 blocks\n==382643==      possibly lost: 0 bytes in 0 blocks\n==382643==    still reachable: 0 bytes in 0 blocks\n==382643==         suppressed: 0 bytes in 0 blocks\n==382643==\n==382643== For lists of detected and suppressed errors, rerun with: -s\n==382643== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\n")),(0,r.kt)("h2",{id:"how-are-objects-allocated-on-the-heap"},"\u5bf9\u8c61\u662f\u5982\u4f55\u5728\u5806 (heap) \u4e0a\u88ab\u5206\u914d\u7684"),(0,r.kt)("p",null,"\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u5185\u5b58\u6cc4\u6f0f\u80cc\u540e\u7684\u673a\u5236\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 C++ \u662f\u5982\u4f55\u5206\u914d\u4ee5\u53ca\u91ca\u653e\u5185\u5b58\u7684\u3002\u6362\u8a00\u4e4b\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"new")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8ba9\u6211\u4eec\u4e00\u8d77\u6df1\u5165\u8fdb GNU \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"libstdc++")," \u5b9e\u73b0\uff08g++ \u9ed8\u8ba4\u4f7f\u7528\u7684\u5e93\uff09\u7684\u6e90\u7801\u3002"),(0,r.kt)("h3",{id:"how-new-and-delete-works"},(0,r.kt)("inlineCode",{parentName:"h3"},"new")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"h3"},"delete")," \u662f\u5982\u4f55\u5de5\u4f5c\u7684"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"new")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u64cd\u4f5c\u7b26\u4ec5\u4ec5\u662f C++ \u6807\u51c6\u4e2d\u5b9a\u4e49\u7684 interface\uff0c\u5b83\u4eec\u62e5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002\u6211\u5728\u6b64\u5904\u5c06\u4f7f\u7528 GNU \u5728 gcc 11.2 \u7248\u672c\u4e2d\u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"libstdc++")," \u7684 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gcc-mirror/gcc/tree/releases/gcc-11.2.0"},"\u6e90\u7801"),"\u3002"))),(0,r.kt)("h4",{id:"new-and-delete-are-just-wrappers-of-new-and-delete"},(0,r.kt)("inlineCode",{parentName:"h4"},"new[]")," \u548c ",(0,r.kt)("inlineCode",{parentName:"h4"},"delete[]")," \u53ea\u662f\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"h4"},"new")," \u548c ",(0,r.kt)("inlineCode",{parentName:"h4"},"delete")," \u7684\u5c01\u88c5"),(0,r.kt)("p",null,"\u6709\u610f\u601d\u7684\u662f\uff0c\u4ece ",(0,r.kt)("inlineCode",{parentName:"p"},"operator new[]")," \u7684\u5b9e\u73b0\uff08",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gcc-mirror/gcc/blob/releases/gcc-11.2.0/libstdc++-v3/libsupc++/new_opv.cc#L29-L33"},"\u6e90\u7801"),"\uff09\u6765\u770b\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"new[]")," \u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"stdlibc++")," \u4e2d\u53ea\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"new")," \u7684\u4e00\u4e2a\u522b\u540d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="/libstdc++-v3/libsupc++/new_opv.cc:L29-33"',title:'"/libstdc++-v3/libsupc++/new_opv.cc:L29-33"'},"_GLIBCXX_WEAK_DEFINITION void*\noperator new[] (std::size_t sz) _GLIBCXX_THROW (std::bad_alloc)\n{\n  return ::operator new(sz);\n}\n")),(0,r.kt)("p",null,"\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]"),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gcc-mirror/gcc/blob/releases/gcc-11.2.0/libstdc++-v3/libsupc++/del_opv.cc#L32-L36"},"\u6e90\u7801"),"\uff09\u800c\u8a00\u4ea6\u662f\u5982\u6b64\uff0c\u5b83\u4e0d\u8fc7\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u7684\u522b\u540d\u3002"),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u6839\u636e GNU stdlibc++ \u7684\u5b9e\u73b0\u6765\u770b\uff0c\u4f3c\u4e4e\u6df7\u5408\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"new[]")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"new"),"\uff0c\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002"),(0,r.kt)("p",{parentName:"div"},"\u4f46\u662f\uff0c\u4f60\u5e94\u5f53\u907f\u514d\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u8fd9\u79cd\u884c\u4e3a\u662f\u53d6\u51b3\u4e8e\u5b9e\u73b0\u7684\u3002\u6839\u636e ",(0,r.kt)("a",{parentName:"p",href:"https://timsong-cpp.github.io/cppwp/expr.delete#2"},"C++ Working Paper"),"\uff0c\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"new")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," \u800c\u4e0d\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"new[]")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\uff0c\u8fd9\u4f1a\u4f7f\u8c03\u8bd5\u53d8\u5f97\u4e00\u56e2\u7cdf\u3002"))),(0,r.kt)("h4",{id:"and-new--delete-are-wrappers-of-malloc-and-free"},"\u800c ",(0,r.kt)("inlineCode",{parentName:"h4"},"new")," \u548c ",(0,r.kt)("inlineCode",{parentName:"h4"},"delete")," \u4e0d\u8fc7\u662f\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"h4"},"malloc")," \u548c ",(0,r.kt)("inlineCode",{parentName:"h4"},"free")," \u7684\u5c01\u88c5"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770b ",(0,r.kt)("inlineCode",{parentName:"p"},"new")," \u7684 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gcc-mirror/gcc/blob/releases/gcc-11.2.0/libstdc++-v3/libsupc++/new_op.cc#L41-L59"},"\u6e90\u7801"),"\u3002\u5b83\u4e5f\u53ea\u662f\u4e00\u4e2a\u5bf9 C \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u52a0\u4e0a\u4e00\u4e9b\u9519\u8bef\u5904\u7406\u7684\u5c01\u88c5\uff0c\u5e76\u4f1a\u5728\u6700\u540e\u7ed9\u8c03\u7528\u8005 return \u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u8fd4\u56de\u7684\u539f\u59cb\u6307\u9488\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="/libstdc++-v3/libsupc++/new_op.cc:L41-59"',title:'"/libstdc++-v3/libsupc++/new_op.cc:L41-59"'},"_GLIBCXX_WEAK_DEFINITION void *\noperator new (std::size_t sz) _GLIBCXX_THROW (std::bad_alloc)\n{\n  void *p;\n\n  /* malloc (0) is unpredictable; avoid it.  */\n  if (__builtin_expect (sz == 0, false))\n    sz = 1;\n\n  while ((p = malloc (sz)) == 0)\n    {\n      new_handler handler = std::get_new_handler ();\n      if (! handler)\n    _GLIBCXX_THROW_OR_ABORT(bad_alloc());\n      handler ();\n    }\n\n  return p;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"delete"),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gcc-mirror/gcc/blob/releases/gcc-11.2.0/libstdc++-v3/libsupc++/del_op.cc#L46-L50"},"\u6e90\u7801"),"\uff09\u66f4\u52a0\u7b80\u5355\uff0c\u76f4\u63a5\u8c03\u7528\u4e86 C \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"free"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="libstdc++-v3/libsupc++/del_op.cc:L46-50"',title:'"libstdc++-v3/libsupc++/del_op.cc:L46-50"'},"_GLIBCXX_WEAK_DEFINITION void\noperator delete(void* ptr) noexcept\n{\n  std::free(ptr);\n}\n")),(0,r.kt)("p",null,"\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u4f3c\u4e4e\u9700\u8981\u4e00\u8def\u6df1\u5165\u5230 C \u6807\u51c6\u5e93\u4e2d\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u7684\u5b9e\u73b0\u624d\u80fd\u77e5\u9053\u5728\u6570\u7ec4\u7684\u521b\u5efa\u4e0e\u9500\u6bc1\u80cc\u540e\u7a76\u7adf\u53d1\u751f\u4e86\u4ec0\u4e48\u3002"),(0,r.kt)("p",null,"\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u4f1a\u6db5\u76d6\u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u76f8\u5173\u7684\u5168\u90e8\u5185\u5bb9\uff08\u8fd9\u4e9b\u5185\u5bb9\u672c\u8eab\u5c31\u8db3\u591f\u6491\u8d77\u53e6\u5916\u4e00\u7bc7\u6587\u7ae0\u4e86\uff09\uff0c\u6211\u4eec\u5c06\u4e3b\u8981\u5173\u6ce8 ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u5982\u4f55\u7ec4\u7ec7\u5b83\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u7b54\u6848\uff1a\u5728\u5806\u4e0a\u6784\u5efa ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc_chunk"),"\uff09\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u662f\u5982\u4f55\u77e5\u9053\u53bb\u91ca\u653e\u54ea\u5757\u5185\u5b58\u7684\u3002"),(0,r.kt)("h3",{id:"how-are-malloc_chunks-structured"},(0,r.kt)("inlineCode",{parentName:"h3"},"malloc_chunk")," \u7684\u7ed3\u6784\u662f\u4ec0\u4e48\u6837\u7684?"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u4e0e\u4e0a\u8282\u4e00\u6837\uff0c\u6211\u5c06\u4f7f\u7528 GNU \u5bf9 C \u6807\u51c6\u5e93\u7684\u5b9e\u73b0, \u5373 ",(0,r.kt)("inlineCode",{parentName:"p"},"glibc"),"\u3002\nglibc \u7684\u5f53\u524d\u7248\u672c\u662f\u5728 2021 \u5e74 8 \u6708 2 \u65e5 release \u51fa\u7684 ",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=tag;h=refs/tags/glibc-2.34"},"glibc 2.34"),"\u3002"))),(0,r.kt)("p",null,"\u4ee5\u4e0b\u5185\u5bb9\u6765\u81ea glibc \u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc/malloc.c")," \u7684\u6ce8\u91ca\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=e065785af77af72c17c773517c15b248b067b4ad;hb=ae37d06c7d127817ba43850f0f898b793d42aea7#l1168"},"\u6e90\u7801"),"\uff09\u3002\u4ee5\u4e0b\u5185\u5bb9\u4e3a\u82f1\u6587\u539f\u6587\uff0c\u6211\u53ef\u80fd\u4f1a\u5728\u4e4b\u540e\u67d0\u4e2a\u65f6\u5019\u8003\u8651\u5c06\u5176\u7ffb\u8bd1\u4e3a\u4e2d\u6587\u3002\u6211\u5728\u539f\u6587\u4e4b\u4e0a\u8fdb\u884c\u4e86\u4e00\u4e9b\u5fae\u5c0f\u7684\u7f16\u8f91\u4ee5\u5c06\u5176\u9002\u914d\u4e3a Markdown \u683c\u5f0f\uff08\u672c\u7f51\u7ad9\u4f7f\u7528\u7684\u683c\u5f0f\u5316\u5de5\u5177\uff09\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"(The following includes lightly edited explanations by Colin Plumb.)"),(0,r.kt)("p",{parentName:"blockquote"},"Chunks of memory are maintained using a `boundary tag' method as\ndescribed in e.g., Knuth or Standish. (See the paper by Paul\nWilson ",(0,r.kt)("a",{parentName:"p",href:"ftp://ftp.cs.utexas.edu/pub/garbage/allocsrv.ps"},"ftp://ftp.cs.utexas.edu/pub/garbage/allocsrv.ps")," for a\nsurvey of such techniques.) Sizes of free chunks are stored both\nin the front of each chunk and at the end. This makes\nconsolidating fragmented chunks into bigger chunks very fast. The\nsize fields also hold bits representing whether chunks are free or\nin use."),(0,r.kt)("p",{parentName:"blockquote"},"An allocated chunk looks like this:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"    chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of previous chunk, if unallocated (P clear)  |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of chunk, in bytes                     |A|M|P|\n      mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             User data starts here...                          .\n            .                                                               .\n            .             (malloc_usable_size() bytes)                      .\n            .                                                               |\nnextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             (size of chunk, but used for application data)    |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of next chunk, in bytes                |A|0|1|\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n")),(0,r.kt)("p",{parentName:"blockquote"},'Where "chunk" is the front of the chunk for the purpose of most of\nthe malloc code, but "mem" is the pointer that is returned to the\nuser. "Nextchunk" is the beginning of the next contiguous chunk.'),(0,r.kt)("p",{parentName:"blockquote"},"Chunks always begin on even word boundaries, so the mem portion\n(which is returned to the user) is also on an even word boundary, and\nthus at least double-word aligned."),(0,r.kt)("p",{parentName:"blockquote"},"Free chunks are stored in circular doubly-linked lists, and look like this:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"    chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of previous chunk, if unallocated (P clear)  |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    `head:' |             Size of chunk, in bytes                     |A|0|P|\n      mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Forward pointer to next chunk in list             |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Back pointer to previous chunk in list            |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Unused space (may be 0 bytes long)                .\n            .                                                               .\n            .                                                               |\nnextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    `foot:' |             Size of chunk, in bytes                           |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of next chunk, in bytes                |A|0|0|\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n")),(0,r.kt)("p",{parentName:"blockquote"},"The P (",(0,r.kt)("inlineCode",{parentName:"p"},"PREV_INUSE"),") bit, stored in the unused low-order bit of the\nchunk size (which is always a multiple of two words), is an in-use\nbit for the ",(0,r.kt)("em",{parentName:"p"},"previous")," chunk. If that bit is ",(0,r.kt)("em",{parentName:"p"},"clear"),", then the\nword before the current chunk size contains the previous chunk\nsize, and can be used to find the front of the previous chunk.\nThe very first chunk allocated always has this bit set,\npreventing access to non-existent (or non-owned) memory. If\n",(0,r.kt)("inlineCode",{parentName:"p"},"prev_inuse")," is set for any given chunk, then you CANNOT determine\nthe size of the previous chunk, and might even get a memory\naddressing fault when trying to do so."),(0,r.kt)("p",{parentName:"blockquote"},"[...]"),(0,r.kt)("p",{parentName:"blockquote"},"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"foot")," of the current chunk is actually represented\nas the ",(0,r.kt)("inlineCode",{parentName:"p"},"prev_size")," of the NEXT chunk. This makes it easier to\ndeal with alignments etc but can be very confusing when trying\nto extend or adapt this code."),(0,r.kt)("p",{parentName:"blockquote"},"[...]")),(0,r.kt)("h3",{id:"a-verification-using-poc"},"\u5229\u7528 PoC \u4ee3\u7801\u7684\u9a8c\u8bc1"),(0,r.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"gdb")," \u6253\u5370\u51fa\u5185\u5b58\u533a\u57df\u5e76\u9a8c\u8bc1\u4ee5\u4e0a\u7684\u89e3\u91ca\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8fd9\u91cc\u6211\u5c06\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://gef.readthedocs.io/en/master/commands/heap/#heap-chunk-command"},"GEF")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"heap")," \u529f\u80fd\u6765\u66f4\u597d\u5730\u663e\u793a ",(0,r.kt)("inlineCode",{parentName:"p"},"malloc")," \u5206\u914d\u7684 chunk \u7684\u5c5e\u6027\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"gef\u27a4  heap chunk arr\nChunk(addr=0x55555556aeb0, size=0x30, flags=PREV_INUSE)\nChunk size: 48 (0x30)\nUsable size: 40 (0x28)\nPrevious chunk size: 0 (0x0)\nPREV_INUSE flag: On\nIS_MMAPPED flag: Off\nNON_MAIN_ARENA flag: Off\n\ngef\u27a4  x/16xw 0x55555556aeb0-16\n0x55555556aea0: 0x00000000  0x00000000  0x00000031  0x00000000\n0x55555556aeb0: 0x44434241  0x48474645  0x4c4b4a49  0x504f4e4d\n0x55555556aec0: 0x54535251  0x58575655  0x00005a59  0x00000000\n0x55555556aed0: 0x00000000  0x00000000  0x0000f131  0x00000000\n")),(0,r.kt)("p",null,"\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cchunk \u7684\u5927\u5c0f\u662f 48 \u5b57\u8282\uff0c\u53ef\u7528\u5927\u5c0f\uff08\u5b9e\u9645\u5b58\u50a8\u7528\u6237\u5185\u5bb9\u7684\u533a\u57df\uff09\u4e3a 40 \u5b57\u8282\uff0c\u8981\u8fdc\u8fdc\u5927\u51fa\u6211\u4eec\u6240\u8bf7\u6c42\u7684\uff0826 \u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5e94\u5f53\u5360\u636e 26 \u5b57\u8282\u7684\u7a7a\u95f4\uff09\u3002\u8fd9\u662f\u56e0\u4e3a \u201cchunk \u6c38\u8fdc\u5f00\u59cb\u4e8e\u53cc\u6570 \u5b57\uff08word\uff09\u7684\u8fb9\u754c\u2026\u2026\u56e0\u6b64\u81f3\u5c11\u662f\u53cc\u5b57\u5bf9\u9f50\u7684\u201d",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://zh.wikipedia.org/zh-cn/%E5%AD%97_(%E8%AE%A1%E7%AE%97%E6%9C%BA)"},"\u5b57\uff08word\uff09")," \u7684\u5927\u5c0f\u662f\u53d6\u51b3\u4e8e\u7cfb\u7edf\u67b6\u6784\u7684\u3002\u4e00\u822c\u800c\u8a00\uff0c64 \u4f4d\u7cfb\u7edf\u7684\u5b57\u957f\u4e3a 64 \u6bd4\u7279\uff0c\u4e5f\u5c31\u662f 8 \u5b57\u8282\u3002\u7136\u800c\uff0c\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"gdb")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"x/w")," \u547d\u4ee4\u4e2d\uff0c\u5b57\u957f\u4e3a\u56fa\u5b9a\u7684 32 \u6bd4\u7279\uff084 \u5b57\u8282\uff09\uff0c\u975e\u5e38\u4ee4\u4eba\u8ff7\u60d1\u3002\u56e0\u6b64\uff0c\u6211\u5c06\u4f7f\u7528\u201c\u5b57\u201d\u4ee3\u6307\u73b0\u5b9e\u4e2d\u7684\u53d6\u51b3\u4e8e\u7cfb\u7edf\u7684\u53ef\u53d8\u957f\u5ea6\u7684\u5b57\uff0c\u800c\u4f7f\u7528\u201c32 \u6bd4\u7279\u5b57\u201d\u4ee3\u6307 ",(0,r.kt)("inlineCode",{parentName:"p"},"gdb")," \u4e2d\u7684\u5b57\u3002"))),(0,r.kt)("p",null,"\u56e0\u4e3a\u5185\u5b58\u4e2d\u7684 chunk \u6c38\u8fdc\u662f\u53cc\u5b57\u5bf9\u9f50\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u5730\u5740\u4e2d\u51cf\u53bb ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mo",{parentName:"mrow"},"\xd7"),(0,r.kt)("mn",{parentName:"mrow"},"8"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mn",{parentName:"mrow"},"16")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2\\times8=16")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"8"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"6")))))," \u5b57\u8282\u6765\u83b7\u5f97\u6307\u5411 ",(0,r.kt)("inlineCode",{parentName:"p"},"chunk")," \u7684\u6307\u9488\u5730\u5740\u3002\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a\u5b57\uff08\u5728 gdb \u4e2d\u663e\u793a\u4e3a\u4e24\u4e2a 32 \u6bd4\u7279\u5b57\uff09\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"0x00")," \u586b\u6ee1\u4e86\uff1b\u5e76\u4e14\u5c06\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," flag \u88ab\u590d\u4f4d\u65f6\u586b\u5165\u4e0a\u4e00\u4e2a chunk \u7684\u5927\u5c0f\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u4e2a\u5b57 ",(0,r.kt)("inlineCode",{parentName:"p"},"0x31"),"\uff08\u6216\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"0b110001"),"\uff09\u5b58\u50a8\u4e86\u8be5 chunk \u7684\u5927\u5c0f\u4ee5\u53ca 3 \u4e2a flag\u3002\u6700\u4f4e\u6709\u6548\u4f4d\uff08LSB\uff09",(0,r.kt)("inlineCode",{parentName:"p"},"0b1")," \u4ee3\u8868 flag ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," (PREV_INUSE) \u88ab\u8bbe\u7f6e\u4e86\uff0c\u56e0\u6b64\u4e0a\u4e00\u4e2a chunk \u8fd8\u672a\u88ab\u91ca\u653e\u3002\u56e0\u4e3a\u6240\u6709 chunk \u7684\u5927\u5c0f\u90fd\u5fc5\u987b\u81f3\u5c11\u662f 8 \u5b57\u8282\u7684\u6574\u6570\u500d\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u7684 3 \u4e2a\u6700\u4f4e\u6709\u6548\u4f4d\u90fd\u5fc5\u5b9a\u4e3a 0\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e09\u4f4d LSB \u80fd\u88ab\u7528\u4f5c flag\u3002\u5728\u8ba1\u7b97 chunk \u5927\u5c0f\u65f6\uff0c\u6211\u4eec\u80fd\u591f\u76f4\u63a5\u4e22\u5f03\u4e09\u4f4d LSB \u5e76\u53d6\u5f97 ",(0,r.kt)("inlineCode",{parentName:"p"},"0b110000"),"\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"0x30"),"\uff0c\u6216\u662f 48\uff09\u5b57\u8282\u3002"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u5982\u679c\u4f60\u8db3\u591f\u4ed4\u7ec6\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\uff1achunk \u7684\u53ef\u7528\u5927\u5c0f\u662f 40 \u5b57\u8282\uff0c\u53ea\u6bd4 chunk \u5927\u5c0f\u5c0f\u4e86 8 \u5b57\u8282\uff08\u800c\u4e0d\u662f 16\uff09\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5b57\u3002"),(0,r.kt)("p",{parentName:"div"},"\u8fd9\u662f\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"chunk")," \u6307\u9488 \u201c\u6307\u5411\u7684\u5e76\u4e0d\u662f\u672c chunk \u7684\u5f00\u59cb\uff0c\u800c\u662f\u4e0a\u4e00 chunk \u7684\u6700\u540e\u4e00\u5b57\u201d",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/glibc/wiki/MallocInternals#What_is_a_Chunk.3F"},"\u6765\u6e90"),"\uff09\u3002\u5b9e\u9645\u4e0a\uff0cchunk \u5f00\u59cb\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"chunk")," \u6307\u9488\u6307\u5411\u7684\u540e\u4e00\u4e2a\u5b57\uff08\u4e5f\u5c31\u662f\u5b58\u50a8 chunk \u5927\u5c0f\u7684\u5b57\uff09\u3002"))),(0,r.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec \u201c\u5b9e\u9645\u7684\u201d chunk \u5f00\u59cb\u4e8e\u5185\u5b58\u5730\u5740 ",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aea8")," \u5e76\u7ed3\u675f\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aec8"),"\u3002\u6570\u636e\u533a\u57df\u5f00\u59cb\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aeb0")," \u5e76\u7ed3\u675f\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aec8"),"\u3002\u540c\u7406\uff0c\u4e0b\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"chunk")," \u6307\u9488\u6307\u5411\u7684\u662f\u672c chunk \u7684\u6570\u636e\u533a\u57df\u7684\u6700\u540e\u4e00\u4e2a\u5b57\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"0x55555556aec8"),"\uff09\u3002"),(0,r.kt)("p",null,"\u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4ec0\u4e48 chunk \u6307\u9488\u4f1a\u4ee4\u4eba\u8ff7\u60d1\u5730\u6307\u5411\u524d\u4e00 chunk \u7684\u6700\u540e\u4e00\u5b57\u5462\uff1f\u7b54\u6848\u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u8bbe\u8ba1\u7684\u7406\u5ff5\u6709\u5173\u3002"),(0,r.kt)("p",null,"\u5f53\u524d\u4e00\u4e2a chunk \u88ab free \u65f6\uff0c\u5b83\u4f1a\u628a\u6700\u540e\u4e00\u5b57\u586b\u5145\u4e3a\u5b83\u7684\u5927\u5c0f\uff0c\u5e76\u6e05\u9664\u4e0b\u4e00\u4e2a chunk\uff08\u672c chunk\uff09\u4e2d\u7684 P flag\u3002\u8fd9\u6837\uff0c\u672c chunk \u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5927\u5c0f\u5728\u524d\u4e00 chunk \u88ab\u91ca\u653e\u540e \u201c\u627e\u5230\u524d\u4e00 chunk \u7684\u8d77\u59cb\u4f4d\u7f6e\u201d ",(0,r.kt)("sup",{parentName:"p",id:"fnref-3"},(0,r.kt)("a",{parentName:"sup",href:"#fn-3",className:"footnote-ref"},"3")),"\u3002"),(0,r.kt)("h3",{id:"how-does-free-work"},(0,r.kt)("inlineCode",{parentName:"h3"},"free")," \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"),(0,r.kt)("p",null,"\u5230\u73b0\u5728\uff0c\u4f60\u5e94\u8be5\u5df2\u7ecf\u77e5\u9053 \u201c",(0,r.kt)("inlineCode",{parentName:"p"},"delete[]")," \u5982\u4f55\u77e5\u9053\u5b83\u9700\u8981\u91ca\u653e\u54ea\u5757\u5185\u5b58\uff1f\u201d \u7684\u7b54\u6848\u4e86\uff1a\u56e0\u4e3a\u8fd9\u4e2a chunk \u7684\u5927\u5c0f\u5c31\u88ab\u5b58\u50a8\u5728\u5b83\u7684\u5143\u6570\u636e\u4e2d\u3002"),(0,r.kt)("p",null,"\u4f46\u662f\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u7ec6\u8282\u503c\u5f97\u6211\u4eec\u8fdb\u884c\u63a2\u8ba8\uff1a\u4e3a\u4ec0\u4e48 chunk \u6307\u9488\u8981\u6307\u5411\u4e0a\u4e00 chunk \u7684\u7ed3\u5c3e\uff1f\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981 ",(0,r.kt)("inlineCode",{parentName:"p"},"PREV_INUSE")," (P) flag\uff1f\u4e3a\u4e86\u89e3\u7b54\u8fd9\u4e9b\u7591\u95ee\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"\u5728\u9605\u8bfb\u672c\u8282\u65f6\uff0c\u4f60\u53ef\u4ee5\u4e0e ",(0,r.kt)("a",{parentName:"p",href:"#how-are-malloc_chunks-structured"},(0,r.kt)("inlineCode",{parentName:"a"},"malloc_chunk")," \u7684\u7ed3\u6784\u662f\u4ec0\u4e48\u6837\u7684?")," \u8282\u8fdb\u884c\u4ea4\u53c9\u5bf9\u7167\uff0c\u4ee5\u67e5\u770b chunk \u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u524d\u540e\u7684\u7ed3\u6784\u5206\u522b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002"))),(0,r.kt)("p",null,"\u957f\u8bdd\u77ed\u8bf4\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u5927\u81f4\u662f\u5982\u4e0b\u5de5\u4f5c\u7684\u3002\u5f53\u5b83\u88ab\u8c03\u7528\u65f6\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=e065785af77af72c17c773517c15b248b067b4ad;hb=ae37d06c7d127817ba43850f0f898b793d42aea7#l3237"},"\u6e90\u7801"),"\uff09\uff0c\u7528\u6237\u4f1a\u4f20\u7ed9\u5b83\u4e00\u4e2a\u6307\u5411\u6570\u636e\u5730\u5740\u7684\u6307\u9488\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u5219\u4f1a\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"mem2chunk"),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=e065785af77af72c17c773517c15b248b067b4ad;hb=ae37d06c7d127817ba43850f0f898b793d42aea7#l1310"},"\u6e90\u7801"),"\uff09\u5c06\u5176\u8f6c\u6362\u4e3a\u6307\u5411 chunk \u5934\u7684\u6307\u9488\u3002\n\u968f\u540e\uff0c\u5982\u679c\u8fd9\u4e00 chunk \u662f\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"mmap")," \u5206\u914d\u7684\uff08\u53ef\u7531 M flag \u5f97\u77e5\uff09\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u4f1a\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"munmap"),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://man.archlinux.org/man/munmap.3p.en"},"man 3p")," | ",(0,r.kt)("a",{parentName:"p",href:"https://man.archlinux.org/man/munmap.2.en"},"man 2"),"\uff09\u8fdb\u884c\u91ca\u653e\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5b83\u4f1a\u5c06 chunk \u6307\u9488\u4f20\u7ed9 ",(0,r.kt)("inlineCode",{parentName:"p"},"_int_free"),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=e065785af77af72c17c773517c15b248b067b4ad;hb=ae37d06c7d127817ba43850f0f898b793d42aea7#l4302"},"\u6e90\u7801"),"\uff09\u6b63\u5f0f\u8fdb\u884c\u91ca\u653e\u3002"),(0,r.kt)("p",null,"\u7136\u800c\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u4e00\u4e2a chunk \u201c\u5e76\u4e0d\u4f1a\u5c06\u5176\u4ea4\u8fd8\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u7ed9\u5176\u4ed6\u7a0b\u5e8f\u4f7f\u7528\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"free()")," \u8c03\u7528\u4ec5\u4ec5\u662f\u5c06\u8fd9\u5757\u5185\u5b58\u6807\u8bb0\u4e3a \u2018\u53ef\u88ab\u672c\u7a0b\u5e8f\u91cd\u65b0\u4f7f\u7528\u2019\uff0c\u4f46\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u8fd9\u5757\u5185\u5b58\u4ecd\u7136 \u2018\u5c5e\u4e8e\u2019 \u5e94\u7528\u7a0b\u5e8f\u201d",(0,r.kt)("sup",{parentName:"p",id:"fnref-4"},(0,r.kt)("a",{parentName:"sup",href:"#fn-4",className:"footnote-ref"},"4")),"\uff08",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/glibc/wiki/MallocInternals#Free_Algorithm"},"\u6765\u6e90"),"\uff09\u7684\u5806\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5806\u7ba1\u7406\u5668\u4ecd\u7136\u9700\u8981\u8ffd\u8e2a\u8fd9\u5757\u5185\u5b58\uff0c\u5e76\u5728\u5408\u9002\u7684\u65f6\u5019\u91cd\u65b0\u4f7f\u7528\u5b83\u3002"),(0,r.kt)("p",null,"\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u5faa\u73af\u94fe\u8868\u6765\u7ec4\u7ec7\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u7684 chunk \u4eec\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a chunk \u90fd\u5b58\u50a8\u4e86\u6307\u5411\u524d\u4e00\u4e2a\u4e0e\u540e\u4e00\u4e2a chunk \u7684\u6307\u9488\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a chunk \u7684\u5927\u5c0f\u4f1a\u88ab\u5b58\u50a8\u5728\u5b83\u5185\u5b58\u7684\u6700\u540e\u4e00\u4e2a\u5b57\uff0c\u5373\u4e0b\u4e00\u4e2a chunk \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"chunk")," \u6307\u9488\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4e0b\u4e00\u4e2a chunk \u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u5927\u5c0f\u8bbf\u95ee\u8fd9\u4e2a\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u7684 chunk \u4ee5\u53ca\u5b83\u7684 header\u3002\u5f53\u4e0b\u4e00\u4e2a chunk \u4e5f\u88ab ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u65f6\uff0c\u6211\u4eec\u80fd\u591f\u5229\u7528\u8fd9\u4e00\u5c5e\u6027\u6765 \u5408\u5e76\uff08",(0,r.kt)("a",{parentName:"p",href:"https://cs.stackexchange.com/a/18234"},"coalesce"),"\uff09\u8fd9\u4e24\u4e2a chunk\u3002"),(0,r.kt)("p",null,"\u5f53\u7136\u4e86\uff0c\u5b9e\u9645\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," \u64cd\u4f5c\u8981\u8fdc\u6bd4\u8fd9\u590d\u6742\uff0c\u4e14 chunk \u4eec\u4e5f\u4f1a\u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u518d\u5206\u914d\uff08reallocation\uff09\u88ab\u653e\u7f6e\u5230\u4e0d\u540c\u7684 bin \u4e2d\u3002 \u4f60\u53ef\u4ee5\u9605\u8bfb\u5b98\u65b9\u7684 ",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/glibc/wiki/MallocInternals"},"glibc wiki"),"\uff0c\u8fd9\u7bc7\u66f4\u4e3a\u8be6\u7ec6\u7684 ",(0,r.kt)("a",{parentName:"p",href:"https://azeria-labs.com/heap-exploitation-part-2-glibc-heap-free-bins/"},"\u535a\u6587"),"\uff0c\u6216\u662f ",(0,r.kt)("a",{parentName:"p",href:"https://sourceware.org/git/?p=glibc.git;a=blob;f=malloc/malloc.c;h=e065785af77af72c17c773517c15b248b067b4ad;hb=ae37d06c7d127817ba43850f0f898b793d42aea7#l4302"},(0,r.kt)("inlineCode",{parentName:"a"},"_int_free")," \u7684\u6e90\u7801")," \u4ee5\u4e86\u89e3\u66f4\u591a\u5e95\u5c42\u7ec6\u8282\u3002"),(0,r.kt)("h2",{id:"how-can-we-prevent-memory-leaks"},"\u6211\u4eec\u5982\u4f55\u9884\u9632\u5185\u5b58\u6cc4\u6f0f\uff1f"),(0,r.kt)("p",null,"\u73b0\u5728\u53ef\u80fd\u662f\u65f6\u5019\u56de\u5230\u6211\u4eec\u5f00\u59cb\u7684\u4e3b\u9898\u4e86\uff1a\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5185\u5b58\u6cc4\u6f0f\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u53d1\u751f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u529e\u6cd5\u9884\u9632\u5185\u5b58\u6cc4\u6f0f\u5417\uff1f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6c38\u8fdc ",(0,r.kt)("inlineCode",{parentName:"li"},"delete")," (",(0,r.kt)("inlineCode",{parentName:"li"},"delete[]"),") \u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"li"},"new")," (",(0,r.kt)("inlineCode",{parentName:"li"},"new[]"),") \u521b\u5efa\u7684\u5bf9\u8c61",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8fd9\u662f\u6211\u4eec\u80fd\u505a\u7684\u6700\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u5982\u679c\u4f60\u4ecd\u7136\u575a\u6301\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"li"},"new")," \u7684\u8bdd"))),(0,r.kt)("li",{parentName:"ol"},"\u907f\u514d\u76f4\u63a5\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"li"},"new")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"li"},"delete"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#r11-avoid-calling-new-and-delete-explicitly"},"\u8bf4\u660e"),"\uff08\u82f1\u8bed\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u592a\u957f\u4e0d\u770b"),"\uff1a\u4f7f\u7528\u8d44\u6e90\u53e5\u67c4\uff08resource handle\uff09\u800c\u4e0d\u662f\u88f8\u6307\u9488\uff0c\u540e\u8005\u5177\u6709\u6cc4\u6f0f\u7684\u53ef\u80fd\u6027\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528\u8bf8\u5982 ",(0,r.kt)("inlineCode",{parentName:"li"},"unique_ptr")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"li"},"shared_ptr")," \u7684\u667a\u80fd\u6307\u9488\u3002"))),(0,r.kt)("li",{parentName:"ol"},"\u4e0d\u8981\u7528\u88f8\u6307\u9488\uff08",(0,r.kt)("inlineCode",{parentName:"li"},"T*"),"\uff09\u6216\u5f15\u7528\uff08",(0,r.kt)("inlineCode",{parentName:"li"},"T&"),"\uff09\u6765\u8f6c\u79fb\u6240\u6709\u6743\uff08ownership\uff09",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i11-never-transfer-ownership-by-a-raw-pointer-t-or-reference-t"},"\u8bf4\u660e"),"\uff08\u82f1\u8bed\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u592a\u957f\u4e0d\u770b"),"\uff1a\u5bb9\u6613\u4ea7\u751f\u201c\u8c01\u5e94\u5f53\u5220\u9664\u6307\u9488\u201d\u7684\u6b67\u4e49\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u65b9\u6cd5\uff1a\u76f4\u63a5 return \u5bf9\u8c61\u672c\u8eab\uff0c\u6216\u662f\u4f7f\u7528\u667a\u80fd\u6307\u9488\u3002")))),(0,r.kt)("p",null,"\u4e00\u822c\u6765\u8bf4\uff0c\u8981\u6c42\u7a0b\u5e8f\u5458\u624b\u52a8\u91ca\u653e\u8d44\u6e90\u662f\u5f88\u5bb9\u6613\u51fa\u9519\u7684\u3002\u4f60\u5e94\u8be5\u8003\u8651 ",(0,r.kt)("a",{parentName:"p",href:"https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-raii"},"\u4f7f\u7528\u8d44\u6e90\u53e5\u67c4\u548c RAII\uff08\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90"),"\uff08\u82f1\u8bed\uff09\u3002"),(0,r.kt)("h2",{id:"references--further-readings"},"\u5f15\u7528 & \u6269\u5c55\u9605\u8bfb"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Stroustrup, Bjarne and Sutter, Herb. ",(0,r.kt)("a",{parentName:"li",href:"https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines"},'"C++ Core Guidelines"'),". Updated Jun 17, 2021. Accessed Aug 08, 2021."),(0,r.kt)("li",{parentName:"ul"},"glibc wiki. ",(0,r.kt)("a",{parentName:"li",href:"https://sourceware.org/glibc/wiki/MallocInternals"},'"MallocInternals"'),". Updated May 20, 2019. Accessed Aug 08, 2021."),(0,r.kt)("li",{parentName:"ul"},"Azeria Labs. ",(0,r.kt)("a",{parentName:"li",href:"https://azeria-labs.com/heap-exploitation-part-2-glibc-heap-free-bins/"},'"Heap Exploitation Part 2: Understanding the Glibc Heap Implementation"'),". Accessed Aug 08, 2021."),(0,r.kt)("li",{parentName:"ul"},"CTF Wiki. ",(0,r.kt)("a",{parentName:"li",href:"https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/heap-structure/"},'"\u5806\u76f8\u5173\u6570\u636e\u7ed3\u6784"')," (in Chinese). Accessed Aug 10, 2021."),(0,r.kt)("li",{parentName:"ul"},"glibc Contributors. ",(0,r.kt)("a",{parentName:"li",href:"https://sourceware.org/git/?p=glibc.git;a=tree;h=6eb9f63e6c9197e967a8cc12a8b235335e5a873d;hb=ae37d06c7d127817ba43850f0f898b793d42aea7"},"glibc v2.34 source code"),". Aug 2, 2021. Accessed Aug 8, 2021."),(0,r.kt)("li",{parentName:"ul"},"gcc Contributors. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gcc-mirror/gcc/tree/releases/gcc-11.2.0"},"gcc v11.2.0 source code"),". Jul 28, 2021. Accessed Aug 8, 2021."),(0,r.kt)("li",{parentName:"ul"},"StackOverflow. ",(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/197675/how-does-delete-know-the-size-of-the-operand-array"},'"How does delete[] know the size of the operand array?"'))),(0,r.kt)("p",null,"\u987a\u5e26\u4e00\u63d0\uff0c\u5728\u641c\u7d22\u5185\u5b58\u6cc4\u6f0f\u7684\u65f6\u5019\uff0c\u6211\u5728 Brookhaven National Lab \u7684\u57df\u540d\u4e0b\u9762\u53d1\u73b0\u4e86\u4e00\u4e2a \u5927\u4e9a\u6e7e\u53cd\u5e94\u5806\u4e2d\u5fae\u5b50\u5b9e\u9a8c\u7684 wiki \u9875\u9762 ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.bnl.gov/dayabay/index.php?title=Dealing_With_Memory_Leaks"},'"Dealing With Memory Leaks"'),"\u3002\u6211\u90fd\u4e0d\u77e5\u9053\u5927\u4e9a\u6e7e\u53cd\u5e94\u5806\u8fd8\u6709\u4e00\u4e2a\u56fd\u9645\u7814\u7a76\u9879\u76ee \ud83d\ude02"),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},'"chunks always begin on even word boundaries ... and thus at least double-word aligned."',(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},'"does not point to the beginning of the chunk, but to the last word in the previous chunk"\uff08',(0,r.kt)("a",{parentName:"li",href:"https://sourceware.org/glibc/wiki/MallocInternals#What_is_a_Chunk.3F"},"\u6765\u6e90"),"\uff09",(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-3"},'"to find the front of the previous chunk"',(0,r.kt)("a",{parentName:"li",href:"#fnref-3",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-4"},'"does not actually return it to the operating system for other applications to use. The ',(0,r.kt)("inlineCode",{parentName:"li"},"free()")," call marks a chunk of memory as 'free to be reused' by the application, but from the operating system's point of view, the memory still 'belongs' to the application\"\uff08",(0,r.kt)("a",{parentName:"li",href:"https://sourceware.org/glibc/wiki/MallocInternals#Free_Algorithm"},"\u6765\u6e90"),"\uff09",(0,r.kt)("a",{parentName:"li",href:"#fnref-4",className:"footnote-backref"},"\u21a9")))))}k.isMDXComponent=!0}}]);